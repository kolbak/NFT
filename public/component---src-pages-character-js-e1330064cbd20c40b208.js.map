{"version":3,"file":"component---src-pages-character-js-e1330064cbd20c40b208.js","mappings":"iMAuEA,UA9DkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAEnB,GAA8BC,EAAAA,EAAAA,UAAS,CAAEC,WAAY,KAA9CC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAS,iBAAC,wGAEAC,EAAK,IAAIC,IAAIP,EAASQ,MAAMC,aAAaC,IAAI,MAF7C,SAGYC,MAAM,2CAA2CL,EAAM,CACvEM,OAAQ,QAJJ,cAGAC,EAHA,gBAMYA,EAAIC,OANhB,QAMAC,EANA,QASFC,QAAJ,sCAAoDC,EAAAA,EAApD,IAAqFX,EAErFF,EAAWW,GAXL,kDAaNG,QAAQC,MAAR,MAbM,0DAeP,IAGD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,uBAAKC,UAAU,iBACb,sBAAIA,UAAU,QAAQlB,EAAQmB,MAC7BnB,EAAQG,GACP,gCACE,uBAAKe,UAAU,SAASE,IAAI,kBAAkBC,IAAKrB,EAAQsB,QAC3D,qBAAGjB,KAAML,EAAQa,QAASU,OAAO,SAASL,UAAU,gBAApD,oBAKF,gBAAC,IAAD,CAAQM,MAAM,QAGhB,sBAAIN,UAAU,iBAAd,WACA,uBAAKA,UAAU,QACb,0BACGlB,EAAQG,GACPH,EAAQD,WAAW0B,KAAI,SAAAC,GAAI,OACzB,sBAAIR,UAAU,UACXQ,EAAKC,WACN,wBAAMT,UAAU,WAChB,wBAAMA,UAAU,SAASQ,EAAKE,WAQlC,gBAAC,IAAD,CAAQJ,MAAM","sources":["webpack://nft/./src/pages/character.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Loader from \"../components/loader\"\r\nimport contractConfig from \"../etc/config.json\"\r\n\r\nimport \"./character.scss\"\r\n\r\nconst Character = ({ location }) => {\r\n  const isBrowser = typeof window !== \"undefined\"\r\n  const [nftData, setNftData] = useState({ attributes: [] })\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const id = new URL(location.href).searchParams.get(\"id\")\r\n      const res = await fetch(`https://familyphallusplanet.com/api/nft/${id}`, {\r\n        method: \"GET\",\r\n      })\r\n      const nft = await res.json()\r\n\r\n      //   nft.birthday = new Intl.DateTimeFormat(\"en-US\").format(new Date())\r\n      nft.opensea = `https://testnets.opensea.io/assets/${contractConfig.contractArdess}/${id}`\r\n\r\n      setNftData(nft)\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"FAPP\" />\r\n      <div className=\"gen-wrap char\">\r\n        <h1 className=\"name\">{nftData.name}</h1>\r\n        {nftData.id ? (\r\n          <>\r\n            <img className=\"avatar\" alt=\"character image\" src={nftData.image} />\r\n            <a href={nftData.opensea} target=\"_blank\" className=\"OpenSea-link\">\r\n              View on OpenSea\r\n            </a>\r\n          </>\r\n        ) : (\r\n          <Loader scale=\"0.4\" />\r\n        )}\r\n\r\n        <h2 className=\"detail-header\">Details</h2>\r\n        <div className=\"text\">\r\n          <ul>\r\n            {nftData.id ? (\r\n              nftData.attributes.map(attr => (\r\n                <li className=\"detail\">\r\n                  {attr.trait_type}\r\n                  <span className=\"points\"></span>\r\n                  <span className=\"value\">{attr.value}</span>\r\n                  {/* <p className=\"level\">Wild-Afterlife</p>\r\n                <p className=\"occurs\">\r\n                  Occurs in<span> 10%</span>\r\n                </p> */}\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <Loader scale=\"0.4\" />\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Character\r\n"],"names":["location","useState","attributes","nftData","setNftData","useEffect","id","URL","href","searchParams","get","fetch","method","res","json","nft","opensea","contractConfig","console","error","title","className","name","alt","src","image","target","scale","map","attr","trait_type","value"],"sourceRoot":""}