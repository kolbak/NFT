{"version":3,"file":"component---src-pages-character-js-f19821dae18ba104707e.js","mappings":"8KAgEA,UAxDkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAEnB,GAA8BC,EAAAA,EAAAA,UAAS,IAAhCC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAS,iBAAC,wGAEAC,EAAK,IAAIC,IAAIN,EAASO,MAAMC,aAAaC,IAAI,MAF7C,SAGYC,MAAM,kCAAkCL,EAAM,CAC9DM,OAAQ,QAJJ,cAGAC,EAHA,gBAMYA,EAAIC,OANhB,QAMAC,EANA,QASFC,QAAJ,sCAAoDC,EAAAA,EAApD,IAAqFX,EAErFF,EAAWW,GAXL,kDAaNG,QAAQC,MAAR,MAbM,0DAeP,IAGD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,uBAAKC,UAAU,iBACb,sBAAIA,UAAU,QAAQlB,EAAQmB,MAC9B,uBAAKD,UAAU,SAASE,IAAI,kBAAkBC,IAAKrB,EAAQsB,QAC3D,qBAAGjB,KAAML,EAAQa,QAASU,OAAO,SAASL,UAAU,gBAApD,mBAGA,sBAAIA,UAAU,iBAAd,WACA,uBAAKA,UAAU,QACb,0BACE,sBAAIA,UAAU,UAAd,WAEE,wBAAMA,UAAU,WAChB,wBAAMA,UAAU,SAAhB,SAEDlB,EAAQwB,WAAWC,KAAI,SAAAC,GAAI,OAC1B,sBAAIR,UAAU,UACXQ,EAAKC,WACN,wBAAMT,UAAU,WAChB,wBAAMA,UAAU,SAASQ,EAAKE","sources":["webpack://nft/./src/pages/character.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport contractConfig from \"../etc/config.json\"\n\nimport \"./character.scss\"\n\nconst Character = ({ location }) => {\n  const isBrowser = typeof window !== \"undefined\"\n  const [nftData, setNftData] = useState({})\n\n  useEffect(async () => {\n    try {\n      const id = new URL(location.href).searchParams.get(\"id\")\n      const res = await fetch(`https://cockiz-test.ru/api/nft/${id}`, {\n        method: \"GET\",\n      })\n      const nft = await res.json()\n\n      //   nft.birthday = new Intl.DateTimeFormat(\"en-US\").format(new Date())\n      nft.opensea = `https://testnets.opensea.io/assets/${contractConfig.contractArdess}/${id}`\n\n      setNftData(nft)\n    } catch (err) {\n      console.error(err)\n    }\n  }, [])\n\n  return (\n    <Layout>\n      <Seo title=\"FAPP\" />\n      <div className=\"gen-wrap char\">\n        <h1 className=\"name\">{nftData.name}</h1>\n        <img className=\"avatar\" alt=\"character image\" src={nftData.image} />\n        <a href={nftData.opensea} target=\"_blank\" className=\"OpenSea-link\">\n          View on OpenSea\n        </a>\n        <h2 className=\"detail-header\">Details</h2>\n        <div className=\"text\">\n          <ul>\n            <li className=\"detail\">\n              Birthday\n              <span className=\"points\"></span>\n              <span className=\"value\">none</span>\n            </li>\n            {nftData.attributes.map(attr => (\n              <li className=\"detail\">\n                {attr.trait_type}\n                <span className=\"points\"></span>\n                <span className=\"value\">{attr.value}</span>\n                {/* <p className=\"level\">Wild-Afterlife</p>\n                <p className=\"occurs\">\n                  Occurs in<span> 10%</span>\n                </p> */}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Character\n"],"names":["location","useState","nftData","setNftData","useEffect","id","URL","href","searchParams","get","fetch","method","res","json","nft","opensea","contractConfig","console","error","title","className","name","alt","src","image","target","attributes","map","attr","trait_type","value"],"sourceRoot":""}